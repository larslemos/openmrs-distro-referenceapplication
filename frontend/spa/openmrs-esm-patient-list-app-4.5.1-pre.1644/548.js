"use strict";(globalThis.webpackChunk_openmrs_esm_patient_list_app=globalThis.webpackChunk_openmrs_esm_patient_list_app||[]).push([[548],{7156:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(1799),i=t.n(a),s=t(2609),o=t.n(s)()(i());o.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-list__add-patient__productiveHeading02___pqPL2{font-size:var(--cds-heading-compact-02-font-size, 1rem);font-weight:var(--cds-heading-compact-02-font-weight, 600);line-height:var(--cds-heading-compact-02-line-height, 1.375);letter-spacing:var(--cds-heading-compact-02-letter-spacing, 0)}.-esm-patient-list__add-patient__productiveHeading03___tEmC1{font-size:var(--cds-heading-03-font-size, 1.25rem);font-weight:var(--cds-heading-03-font-weight, 400);line-height:var(--cds-heading-03-line-height, 1.4);letter-spacing:var(--cds-heading-03-letter-spacing, 0)}.-esm-patient-list__add-patient__productiveHeading04___UU262{font-size:var(--cds-heading-04-font-size, 1.75rem);font-weight:var(--cds-heading-04-font-weight, 400);line-height:var(--cds-heading-04-line-height, 1.28572);letter-spacing:var(--cds-heading-04-letter-spacing, 0)}.-esm-patient-list__add-patient__bodyLong01___lHVdb{font-size:var(--cds-body-01-font-size, 0.875rem);font-weight:var(--cds-body-01-font-weight, 400);line-height:var(--cds-body-01-line-height, 1.42857);letter-spacing:var(--cds-body-01-letter-spacing, 0.16px)}.-esm-patient-list__add-patient__bodyShort01___U\\+zw6{font-size:var(--cds-body-compact-01-font-size, 0.875rem);font-weight:var(--cds-body-compact-01-font-weight, 400);line-height:var(--cds-body-compact-01-line-height, 1.28572);letter-spacing:var(--cds-body-compact-01-letter-spacing, 0.16px)}.-esm-patient-list__add-patient__bodyShort02___9tG7c{font-size:var(--cds-body-compact-02-font-size, 1rem);font-weight:var(--cds-body-compact-02-font-weight, 400);line-height:var(--cds-body-compact-02-line-height, 1.375);letter-spacing:var(--cds-body-compact-02-letter-spacing, 0)}.-esm-patient-list__add-patient__text02___mcxkW{color:#525252}.-esm-patient-list__add-patient__label01___g4Hyx{font-size:var(--cds-label-01-font-size, 0.75rem);font-weight:var(--cds-label-01-font-weight, 400);line-height:var(--cds-label-01-line-height, 1.33333);letter-spacing:var(--cds-label-01-letter-spacing, 0.32px)}.-esm-patient-list__add-patient__modal___Q2\\+K8{position:fixed;width:100vw;height:100vh;display:grid;background-color:rgba(0,0,0,.5);z-index:9000;justify-items:center;align-items:center}.-esm-patient-list__add-patient__modalContent___LO\\+sA{width:100%;background-color:#f4f4f4}.-esm-patient-list__add-patient__modalHeader___fqvlA{margin:1rem}.-esm-patient-list__add-patient__patientListList___Z12QR{padding:0 1rem}.-esm-patient-list__add-patient__checkbox___73-sG{padding-bottom:.875rem}.-esm-patient-list__add-patient__pagination___P\\+zJC{width:100%;overflow:hidden}.-esm-patient-list__add-patient__paginationContainer___-XK-g{display:flex;justify-content:space-between;align-items:center;position:relative}.-esm-patient-list__add-patient__itemsCountDisplay___dlKde{position:absolute;top:0;left:1rem;height:3rem;display:flex;align-items:center;color:#525252}.-esm-patient-list__add-patient__pagination___P\\+zJC>div:first-child{visibility:hidden;width:0}.-esm-patient-list__add-patient__buttonSet___ybKNb{display:flex;justify-content:space-between;align-items:flex-start}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/style.scss","webpack://./../../node_modules/@carbon/type/scss/_styles.scss","webpack://./src/add-patient/add-patient.scss"],names:[],mappings:"AAoDA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCnDF,6DCs0BI,uDAAA,CAAA,0DAAA,CAAA,4DAAA,CAAA,8DAAA,CDl0BJ,6DCk0BI,kDAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,sDAAA,CD9zBJ,6DC8zBI,kDAAA,CAAA,kDAAA,CAAA,sDAAA,CAAA,sDAAA,CD1zBJ,oDC0zBI,gDAAA,CAAA,+CAAA,CAAA,mDAAA,CAAA,wDAAA,CDtzBJ,sDCszBI,wDAAA,CAAA,uDAAA,CAAA,2DAAA,CAAA,gEAAA,CDlzBJ,qDCkzBI,oDAAA,CAAA,uDAAA,CAAA,yDAAA,CAAA,2DAAA,CD9yBJ,gDACE,aDxBQ,CC2BV,iDC0yBI,gDAAA,CAAA,gDAAA,CAAA,oDAAA,CAAA,yDAAA,CDtyBJ,gDACE,cAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,+BAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CE1CF,uDACE,UAAA,CACA,wBAAA,CAGF,qDACE,WAAA,CAGF,yDACE,cAAA,CAGF,kDACE,sBAAA,CAGF,qDACE,UAAA,CACA,eAAA,CAGF,6DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CAGF,2DACE,iBAAA,CACA,KAAA,CACA,SAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CAGF,qEACE,iBAAA,CACA,OAAA,CAGF,mDACE,YAAA,CACA,6BAAA,CACA,sBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n$brand-primary-10: #d9fbfb;\n$brand-primary-20: #9ef0f0;\n$brand-primary-30: #3ddbd9;\n$brand-primary-40: #08bdba;\n$brand-primary-50: #009d9a;\n\n/* 60,70 and 80 are already declared as brand-01, 02 and 03 respectively */\n\n$brand-primary-90: #022b30;\n$brand-primary-100: #081a1c;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1023px;\n$breakpoint-small-desktop-min: 1024px;\n$breakpoint-small-desktop-max: 1439px;\n$breakpoint-large-desktop-min: 1440px;\n$breakpoint-large-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@use '@carbon/styles/scss/spacing';\n@use '@carbon/styles/scss/type';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.productiveHeading02 {\n  @include type.type-style('heading-compact-02');\n}\n\n.productiveHeading03 {\n  @include type.type-style('heading-03');\n}\n\n.productiveHeading04 {\n  @include type.type-style('heading-04');\n}\n\n.bodyLong01 {\n  @include type.type-style('body-01');\n}\n\n.bodyShort01 {\n  @include type.type-style('body-compact-01');\n}\n\n.bodyShort02 {\n  @include type.type-style('body-compact-02');\n}\n\n.text02 {\n  color: $text-02;\n}\n\n.label01 {\n  @include type.type-style('label-01');\n}\n\n.modal {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9000;\n  justify-items: center;\n  align-items: center;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// stylelint-disable number-max-precision\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@carbon/grid/scss/config' as gridconfig;\n@use '@carbon/grid/scss/breakpoint' as grid;\n@use 'prefix' as *;\n@use 'font-family';\n@use 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: scale.type-scale(1),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-02: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-01: $body-short-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-01: $body-long-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-02: $body-short-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-02: $body-long-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-01: $productive-heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-02: $productive-heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-03: $productive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-04: $productive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-05: $productive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-06: $productive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: scale.type-scale(12),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-07: $productive-heading-07 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(5),\n      line-height: 1.4,\n    ),\n    max: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-03: $expressive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n      font-weight: font-family.font-weight('regular'),\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      font-weight: font-family.font-weight('regular'),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-04: $expressive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      font-weight: font-family.font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-05: $expressive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-06: $expressive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: scale.type-scale(6),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-paragraph-01: $expressive-paragraph-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(5),\n    ),\n    lg: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-01: $quotation-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-02: $quotation-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-01: $display-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-02: $display-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(12),\n      line-height: 1.18,\n    ),\n    lg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(16),\n      line-height: 1.11,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-03: $display-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: scale.type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-04: $display-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  label-01: $label-01,\n  label-02: $label-02,\n  helper-text-01: $helper-text-01,\n  helper-text-02: $helper-text-02,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n  // V11 Tokens\n  legal-01: $legal-01,\n  legal-02: $legal-02,\n  body-compact-01: $body-compact-01,\n  body-compact-02: $body-compact-02,\n  heading-compact-01: $heading-compact-01,\n  heading-compact-02: $heading-compact-02,\n  body-01: $body-01,\n  body-02: $body-02,\n  heading-03: $heading-03,\n  heading-04: $heading-04,\n  heading-05: $heading-05,\n  heading-06: $heading-06,\n  heading-07: $heading-07,\n  fluid-heading-03: $fluid-heading-03,\n  fluid-heading-04: $fluid-heading-04,\n  fluid-heading-05: $fluid-heading-05,\n  fluid-heading-06: $fluid-heading-06,\n  fluid-paragraph-01: $fluid-paragraph-01,\n  fluid-quotation-01: $fluid-quotation-01,\n  fluid-quotation-02: $fluid-quotation-02,\n  fluid-display-01: $fluid-display-01,\n  fluid-display-02: $fluid-display-02,\n  fluid-display-03: $fluid-display-03,\n  fluid-display-04: $fluid-display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return math.div($value, $value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: gridconfig.$grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map.remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map.get($type-styles, breakpoints) {\n    @include grid.breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map.get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map.get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map.remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map.get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map.get($type-styles, font-size);\n  $min-font-size: map.get($type-styles, font-size);\n  @if map.has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map.get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map.get($breakpoint, width);\n  $min-vw: map.get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: grid.breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map.has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: grid.breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map.get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map.get(\n      map.get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map.get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  @if not map.has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map.get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map.has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @include custom-properties($name, $token);\n  }\n}\n","@import '../style.scss';\n\n.modalContent {\n  width: 100%;\n  background-color: #f4f4f4;\n}\n\n.modalHeader {\n  margin: 1rem;\n}\n\n.patientListList {\n  padding: 0 1rem;\n}\n\n.checkbox {\n  padding-bottom: 0.875rem;\n}\n\n.pagination {\n  width: 100%;\n  overflow: hidden;\n}\n\n.paginationContainer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n}\n\n.itemsCountDisplay {\n  position: absolute;\n  top: 0;\n  left: 1rem;\n  height: 3rem;\n  display: flex;\n  align-items: center;\n  color: #525252;\n}\n\n.pagination > div:first-child {\n  visibility: hidden;\n  width: 0;\n}\n\n.buttonSet {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n"],sourceRoot:""}]),o.locals={productiveHeading02:"-esm-patient-list__add-patient__productiveHeading02___pqPL2",productiveHeading03:"-esm-patient-list__add-patient__productiveHeading03___tEmC1",productiveHeading04:"-esm-patient-list__add-patient__productiveHeading04___UU262",bodyLong01:"-esm-patient-list__add-patient__bodyLong01___lHVdb",bodyShort01:"-esm-patient-list__add-patient__bodyShort01___U+zw6",bodyShort02:"-esm-patient-list__add-patient__bodyShort02___9tG7c",text02:"-esm-patient-list__add-patient__text02___mcxkW",label01:"-esm-patient-list__add-patient__label01___g4Hyx",modal:"-esm-patient-list__add-patient__modal___Q2+K8",modalContent:"-esm-patient-list__add-patient__modalContent___LO+sA",modalHeader:"-esm-patient-list__add-patient__modalHeader___fqvlA",patientListList:"-esm-patient-list__add-patient__patientListList___Z12QR",checkbox:"-esm-patient-list__add-patient__checkbox___73-sG",pagination:"-esm-patient-list__add-patient__pagination___P+zJC",paginationContainer:"-esm-patient-list__add-patient__paginationContainer___-XK-g",itemsCountDisplay:"-esm-patient-list__add-patient__itemsCountDisplay___dlKde",buttonSet:"-esm-patient-list__add-patient__buttonSet___ybKNb"};const l=o},2548:(e,n,t)=>{t.r(n),t.d(n,{default:()=>q,useAddablePatientLists:()=>L});var a=t(268),i=t.n(a),s=t(4924),o=t(3255),l=t(906),r=t(3469),p=t(2565),c=t(6062),d=t.n(c),u=t(4036),f=t.n(u),g=t(6793),h=t.n(g),y=t(7892),b=t.n(y),m=t(1173),A=t.n(m),$=t(2464),_=t.n($),v=t(7156),w={};w.styleTagTransform=_(),w.setAttributes=b(),w.insert=h().bind(null,"head"),w.domAPI=f(),w.insertStyleElement=A(),d()(v.Z,w);const k=v.Z&&v.Z.locals?v.Z.locals:void 0;function x(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}function C(e,n,t,a,i,s,o){try{var l=e[s](o),r=l.value}catch(e){return void t(e)}l.done?n(r):Promise.resolve(r).then(a,i)}function z(e){return function(){var n=this,t=arguments;return new Promise((function(a,i){var s=e.apply(n,t);function o(e){C(s,a,i,o,l,"next",e)}function l(e){C(s,a,i,o,l,"throw",e)}o(void 0)}))}}function D(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,i,s=[],o=!0,l=!1;try{for(t=t.call(e);!(o=(a=t.next()).done)&&(s.push(a.value),!n||s.length!==n);o=!0);}catch(e){l=!0,i=e}finally{try{o||null==t.return||t.return()}finally{if(l)throw i}}return s}}(e,n)||E(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function M(e){return function(e){if(Array.isArray(e))return x(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||E(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(e,n){if(e){if("string"==typeof e)return x(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?x(e,n):void 0}}var S=function(e,n){var t,a,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function l(s){return function(l){return function(s){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,a&&(i=2&s[0]?a.return:s[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,s[1])).done)return i;switch(a=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=n.call(e,o)}catch(e){s=[6,e],a=0}finally{t=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}};function L(e){var n=(0,s.useTranslation)().t,t=(0,l.useConfig)();return(0,o.ZP)(["addablePatientLists",e],z((function(){var a,i,s;return S(this,(function(o){switch(o.label){case 0:return[4,Promise.allSettled([N(e,n),T(e,t.myListCohortTypeUUID,t.systemListCohortTypeUUID)])];case 1:return a=D.apply(void 0,[o.sent(),2]),i=a[0],s=a[1],[2,M("fulfilled"===i.status?i.value:[]).concat(M("fulfilled"===s.status?s.value:[]))]}}))})))}function T(e,n,t){return B.apply(this,arguments)}function B(){return(B=z((function(e,n,t){var a,i,s;return S(this,(function(o){switch(o.label){case 0:return[4,Promise.all([(0,p.SA)({},n,t),(0,p.U6)(e)])];case 1:return a=D.apply(void 0,[o.sent(),2]),i=a[0],s=a[1],[2,i.map((function(n){return{id:n.id,displayName:n.display,checked:s.includes(n.id),addPatient:function(){return z((function(){return S(this,(function(t){switch(t.label){case 0:return[4,(0,p.xj)({cohort:n.id,patient:e,startDate:(0,l.toOmrsIsoString)(new Date)})];case 1:return t.sent(),[2]}}))}))()}}}))]}}))}))).apply(this,arguments)}function N(e,n){return P.apply(this,arguments)}function P(){return(P=z((function(e,n){return S(this,(function(t){switch(t.label){case 0:return[4,(0,l.getDynamicOfflineDataEntries)("patient")];case 1:return[2,t.sent().some((function(n){return n.identifier===e}))?[]:[{id:"fake-offline-patient-list",displayName:n("offlinePatients","Offline patients"),addPatient:function(){return z((function(){return S(this,(function(n){switch(n.label){case 0:return[4,(0,l.putDynamicOfflineData)("patient",e)];case 1:return n.sent(),[4,(0,l.syncDynamicOfflineData)("patient",e)];case 2:return n.sent(),[2]}}))}))()}}]]}}))}))).apply(this,arguments)}const q=function(e){var n=e.closeModal,t=e.patientUuid,o=(0,s.useTranslation)().t,p=D((0,a.useState)(""),2),c=p[0],d=p[1],u=D((0,a.useState)([]),2),f=u[0],g=u[1],h=L(t),y=h.data,b=h.isLoading,m=(0,a.useCallback)((function(e,n){g(n?function(n){return M(n).concat([e])}:function(n){return n.filter((function(n){return n!==e}))})}),[]),A=(0,a.useCallback)((function(){var e=!0,t=!1,a=void 0;try{for(var i,s=function(){var e=i.value,n=y.find((function(n){return n.id===e}));if(!n)return"continue";n.addPatient().then((function(){return(0,l.showToast)({title:o("successfullyAdded","Successfully added"),kind:"success",description:"".concat(o("successAddPatientToList","Patient added to list"),": ").concat(n.displayName)})})).catch((function(){return(0,l.showToast)({title:o("error","Error"),kind:"error",description:"".concat(o("errorAddPatientToList","Patient not added to list"),": ").concat(n.displayName)})}))},r=f[Symbol.iterator]();!(e=(i=r.next()).done);e=!0)s()}catch(e){t=!0,a=e}finally{try{e||null==r.return||r.return()}finally{if(t)throw a}}n()}),[y,f,n,o]),$=(0,a.useMemo)((function(){if(!y)return[];if((null==c?void 0:c.trim().length)>0){var e=c.toLowerCase();return y.filter((function(n){return n.displayName.toLowerCase().includes(e)}))}return y}),[c,y]),_=(0,l.usePagination)($,5),v=_.results,w=_.goTo,x=_.currentPage,C=_.paginated;return(0,a.useEffect)((function(){1!==x&&w(1)}),[c]),i().createElement("div",{className:k.modalContent},i().createElement("div",{className:k.modalHeader},i().createElement("h1",{className:k.productiveHeading03},o("addPatientToList","Add patient to list")),i().createElement("h3",{className:k.bodyLong01,style:{margin:"1rem 0"}},o("searchForAListToAddThisPatientTo","Search for a list to add this patient to."))),i().createElement("div",{style:{marginBottom:"0.875rem"}},i().createElement(r.olm,{style:{backgroundColor:"white",borderBottom:"1px solid #e0e0e0"},labelText:o("searchForList","Search for a list"),placeholder:"Filter list",onChange:function(e){var n=e.target;d(n.value)},value:c})),i().createElement("div",{className:k.patientListList},i().createElement("fieldset",{className:"cds--fieldset"},i().createElement("p",{className:"cds--label"},"Patient Lists"),!b&&v?v.length>0?v.map((function(e){return i().createElement("div",{key:e.id,className:k.checkbox},i().createElement(r.XZJ,{key:e.id,onChange:function(n){return m(e.id,n.target.checked)},checked:e.checked||f.includes(e.id),disabled:e.checked,labelText:e.displayName,id:e.id}))})):i().createElement("p",{className:k.bodyLong01},o("noPatientListFound","No patient list found")):i().createElement(i().Fragment,null,i().createElement("div",{className:k.checkbox},i().createElement(r.jJq,null)),i().createElement("div",{className:k.checkbox},i().createElement(r.jJq,null)),i().createElement("div",{className:k.checkbox},i().createElement(r.jJq,null)),i().createElement("div",{className:k.checkbox},i().createElement(r.jJq,null)),i().createElement("div",{className:k.checkbox},i().createElement(r.jJq,null))))),C&&i().createElement("div",{className:k.paginationContainer},i().createElement("span",{className:"".concat(k.itemsCountDisplay," ").concat(k.bodyLong01)},v.length*x," / ",$.length," ",o("items","items")),i().createElement(r.tlE,{className:k.pagination,forwardText:"",backwardText:"",page:x,pageSize:5,pageSizes:[5],totalItems:$.length,onChange:function(e){var n=e.page;return w(n)}})),i().createElement("div",{className:k.buttonSet},i().createElement(r.zxk,{kind:"ghost",size:"xl",onClick:function(){(0,l.navigate)({to:"${openmrsSpaBase}/home/patient-lists?new_cohort=true"}),n()}},o("createNewPatientList","Create new patient list")),i().createElement("div",null,i().createElement(r.zxk,{kind:"secondary",size:"xl",onClick:n},o("cancel","Cancel")),i().createElement(r.zxk,{onClick:A,size:"xl"},o("addToList","Add to list")))))}}}]);